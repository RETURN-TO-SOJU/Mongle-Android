plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.won983212.mongle"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [KAKAO_NATIVE_APP_KEY: properties["KAKAO_NATIVE_APP_KEY"]]
        buildConfigField "String", 'KAKAO_NATIVE_APP_KEY', "\"${properties["KAKAO_NATIVE_APP_KEY"]}\""
        buildConfigField "String", 'BASE_URL', "\"${properties["BASE_URL"]}\""
        buildConfigField "boolean", 'USE_MOCKING', properties["USE_MOCKING"]
        buildConfigField "boolean", 'USE_TEST_ACTIVITY', properties["USE_TEST_ACTIVITY"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    dataBinding {
        enabled = true
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    // android core
    //noinspection GradleDependency
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // google
    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation "androidx.emoji2:emoji2:1.2.0" // Emoji compat
    implementation "androidx.emoji2:emoji2-views:1.2.0"
    implementation "androidx.emoji2:emoji2-views-helper:1.2.0"
    implementation 'com.google.dagger:hilt-android:2.43.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'// Hilt
    kapt 'com.google.dagger:hilt-android-compiler:2.43.2'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    kapt 'org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.5.0'
    implementation "androidx.security:security-crypto-ktx:1.1.0-alpha03" // security
    implementation 'com.google.code.gson:gson:2.9.1' // gson
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.8' // fcm

    // room
    def room_version = "2.4.3"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // lifecycle
    def lifecycle_version = "2.5.1"
    implementation 'androidx.activity:activity-ktx:1.5.1' // activity viewModels() func
    implementation 'androidx.fragment:fragment-ktx:1.5.2' // fragment viewModels() func
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version" // ViewModel
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version" // LiveData

    // 3rd party
    implementation "com.tbuonomo:dotsindicator:4.3" // View pager indicator
    implementation "com.kakao.sdk:v2-user:2.11.0" // Kakao login
    implementation 'com.github.kizitonwose:CalendarView:1.0.4' // Calendar
    implementation 'com.squareup.retrofit2:retrofit:2.9.0' // Retrofit2
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.10' // Retrofit2 logger
    implementation 'com.github.bumptech.glide:glide:4.13.2' // glide
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    // test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-inline:4.8.0' // mockito
    testImplementation "org.assertj:assertj-core:3.20.2"
    androidTestImplementation 'org.mockito:mockito-android:4.8.0'
    androidTestImplementation "org.assertj:assertj-core:3.20.2"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.2'

    // 최신버전을 사용하면 D8/R8 compiler version 오류 발생
    // noinspection GradleDependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
}